{
  "version": 3,
  "sources": ["../../../../../apps/smart_invoice_app/smart_invoice_app/public/js/customer_quick_entry.js", "../../../../../apps/smart_invoice_app/smart_invoice_app/public/js/smart_invoice_setup.js"],
  "sourcesContent": ["frappe.provide(\"frappe.ui.form\");\n\nfrappe.ui.form.CustomerQuickEntryForm = class ContactAddressQuickEntryForm extends (\n\tfrappe.ui.form.QuickEntryForm\n) {\n\tconstructor(doctype, after_insert, init_callback, doc, force) {\n\t\tsuper(doctype, after_insert, init_callback, doc, force);\n\t\tthis.skip_redirect_on_error = true;\n\t}\n\n\trender_dialog() {\n\t\tthis.mandatory = this.mandatory.concat(this.get_variant_fields());\n\t\tsuper.render_dialog();\n\t}\n\n\tvalidate() {\n\t\tconst tpin = this.dialog.doc.tax_id;\n\t\tif (tpin && tpin.length !== 10) {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage:__(\"TPIN must be 10 digits\"),\n\t\t\t\tindicator:'red'\n\t\t\t}, 5);\n\t\t\treturn false;\n\t\t}\n\t\tconst mobile_number = this.dialog.doc.mobile_number;\n\n\t\tif (mobile_number && mobile_number.length !== 10) {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage:__(\"Phone Number must be 10 digits\"),\n\t\t\t\tindicator:'red'\n\t\t\t}, 5);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tinsert() {\n\t\t/**\n\t\t * Using alias fieldnames because the doctype definition define \"email_id\" and \"mobile_no\" as readonly fields.\n\t\t */\n\n\t\tif (!this.validate()){\n\t\t\tthis.dialog.hide();\n\t\t\tsuper.render_dialog();\n\t\t\treturn false;\n\t\t}\n\n\t\tconst map_field_names = {\n\t\t\temail_address: \"email_id\",\n\t\t\tmobile_number: \"mobile_no\",\n\t\t};\n\n\t\tObject.entries(map_field_names).forEach(([fieldname, new_fieldname]) => {\n\t\t\tthis.dialog.doc[new_fieldname] = this.dialog.doc[fieldname];\n\t\t\tdelete this.dialog.doc[fieldname];\n\t\t});\n\n\t\treturn super.insert();\n\t}\n\n\tget_variant_fields() {\n\t\tvar variant_fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tlabel: __(\"Contact Details\"),\n\t\t\t\tcollapsible: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Address Line 1\"),\n\t\t\t\tfieldname: \"address_line1\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Address Line 2 (Optional)\"),\n\t\t\t\tfieldname: \"address_line2\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"City\"),\n\t\t\t\tfieldname: \"city\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Country\"),\n\t\t\t\tfieldname: \"country\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\toptions: \"Country\",\n\t\t\t\tdefault: \"Zambia\",\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Customer POS Id\"),\n\t\t\t\tfieldname: \"customer_pos_id\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\thidden: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Phone Number\"),\n\t\t\t\tfieldname: \"mobile_number\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\treqd: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Email (Optional)\"),\n\t\t\t\tfieldname: \"email_address\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\toptions: \"Email\",\n\t\t\t},\n\t\t];\n\n\t\treturn variant_fields;\n\t}\n};", "// frappe.provide(\"erpnext\");\n\nconsole.log('asd')\n// Wait for the smart-invoice-setup page to be initialized\n$(document).ready(function() {\n\t\nfrappe.call({\n\tmethod: \"smart_invoice_app.scripts.setup.check_setup\",\n\tcallback: (r=>{\n\t\tlet setup_progress = r.message;\n\n\t\tif (r.error || !setup_progress){ console.log(r.error);\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log('system_is_setup', setup_progress);\n\n\t\tif (setup_progress.system_is_setup){\n\t\t\tif(setup_progress.branches_setup){\n\t\t\t\tbranch_selector();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfrappe.show_alert(\"Please setup branches first\");\n\t\t\t}\n\t\t}\t\t\n\t})\n});\n\n});\n\n// function branch_selector(){\n// \t// show a persistent frappe dialog branch selector\n// \t// if only one branch, set it and return\n// \tconsole.log(frappe.session.user, frappe.session.branch);\n// \tlet dialog = new frappe.ui.Dialog({\n// \t\ttitle: __('Select Branch'),\n// \t\tfields: [\n// \t\t\t{\n// \t\t\t\tfieldtype: 'Link',\n// \t\t\t\tfieldname: 'branch',\n// \t\t\t\tlabel: __('Branch'),\n// \t\t\t\toptions: 'Branch',\n// \t\t\t\treqd: 1\n// \t\t\t}\n// \t\t],\n// \t\tprimary_action: function() {\n// \t\t\tlet branch = dialog.get_value('branch');\n// \t\t\tconsole.log('branch', branch, 'selected');\n// \t\t\tif (branch) {\n// \t\t\t\tfrappe.call({\n// \t\t\t\t\tmethod: \"smart_invoice_app.scripts.setup.set_branch\",\n// \t\t\t\t\targs: {\n// \t\t\t\t\t\tbranch: branch\n// \t\t\t\t\t},\n// \t\t\t\t\tcallback: function(r) {\n// \t\t\t\t\t\tif (!r.error) {\n\n// \t\t\t\t\t\t\tconsole.log(frappe.session.user, frappe.session.branch);\n// \t\t\t\t\t\t\tfrappe.show_alert(__('Branch set to ' + branch));\n// \t\t\t\t\t\t\tdialog.hide();\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t});\n// \t\t\t}\n// \t\t}\n// \t});\n// \tdialog.show();\n// }\n\nfunction branch_selector() {\n    frappe.call({\n        method: \"smart_invoice_app.scripts.branch.get_branches_with_setup\",\n        callback: function(r) {\n            if (r.error) {\n                frappe.show_alert(__(\"Error fetching branches: \") + r.message);\n                return;\n            }\n\n            let branches = r.message;\n            if (branches.length === 0) {\n                frappe.show_alert(__(\"No branches are set up.\"));\n                return;\n            // } \n\t\t\t// else if (branches.length === 1) {\n            //     // Automatically select the only branch\n            //     let branch = branches[0].name;\n            //     set_session_branch(branch);\n            //     frappe.show_alert(__(\"Branch set to \") + branch);\n            } else {\n                // Show dialog for branch selection\n                show_branch_selection_dialog(branches);\n            }\n        }\n    });\n}\n\nfunction show_branch_selection_dialog(branches) {\n    // Populate the dialog with the list of branches\n    let branch_options = branches.map(branch => ({ label: branch.name, value: branch.name }));\n    let dialog = new frappe.ui.Dialog({\n        title: __('Select Branch'),\n        fields: [\n            {\n                fieldtype: 'Select',\n                fieldname: 'branch',\n                label: __('Branch'),\n                options: branch_options,\n                reqd: 1\n            }\n        ],\n        primary_action: function() {\n            let branch = dialog.get_value('branch');\n            if (branch) {\n                set_session_branch(branch);\n                frappe.show_alert(__(\"Branch set to \") + branch);\n                dialog.hide();\n            }\n        }\n    });\n    dialog.show();\n}\n\nfunction set_session_branch(branch) {\n\tfrappe.session.branch = branch;\n    // frappe.call({\n    //     method: \"smart_invoice_app.scripts.setup.set_branch\",\n    //     args: { branch: branch },\n    //     callback: function(r) {\n    //         if (!r.error) {\n    //             // Refresh the session to update the branch\n    //             frappe.session.branch = branch;\n    //             frappe.show_alert(__(\"Branch set to \") + branch);\n    //         } else {\n    //             frappe.show_alert(__(\"Error setting branch: \") + r.message);\n    //         }\n    //     }\n    // });\n}"],
  "mappings": "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",
  "names": []
}
