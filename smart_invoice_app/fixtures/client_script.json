[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2024-12-13 18:52:14.381677",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Purchase Invoice List",
  "script": "frappe.listview_settings['Purchase Invoice'] = {\n    refresh: function(listview) {\n        listview.page.add_inner_button(__(\"Download Purchase Invoices\"), function() {\n            frappe.call({\n                method: \"smart_invoice_app.app.get_purchase_invoices\",\n                args: {\n                    from_list: true\n                },\n                callback: (r) => {\n                    listview.refresh();\n                }\n            });\n             \n        }, __(\"Smart Invoice\"));\n        \n        listview.page.get_inner_group_button(\"Smart Invoice\")\n        .find(\"button\")\n        .removeClass(\"btn-default\")\n        .addClass(\"btn-info\");\n    },\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2024-11-28 12:00:24.458444",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Purchase Invoice",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n    validate(frm) {\n        // ensure taxes are inclusive in the item rate\n        frm.doc.taxes.forEach(tax => {\n            if (tax.included_in_print_rate === 0) {\n                tax.included_in_print_rate = 1;\n            }\n        });\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Mode of Payment",
  "enabled": 1,
  "modified": "2024-09-29 22:01:26.624310",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Mode of Payment",
  "script": "frappe.ui.form.on('Mode of Payment', {\n\trefresh(frm) {\n\t    // Set up field filter for custom_zra_payment_type\n        frm.set_query(\"custom_zra_payment_type\", function() {\n            return {\n                filters: {\n                    \"cd_cls\": [\"in\", [\"Payment Type\", \"07\"]]\n                }\n            };\n        });\n\t\t\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Branch",
  "enabled": 1,
  "modified": "2024-12-13 19:19:25.163426",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Branch",
  "script": "frappe.ui.form.on('Branch', {\n\trefresh(frm) {\n\t    \n        if (!frm.doc.__islocal){\n            frm.add_custom_button(__(\"Download Details\"), function() {\n                frappe.call({\n                    method: \"smart_invoice_app.app.sync_branches\",\n            \t\tfreeze: true,\n            \t\tfreeze_message: __(\"Updating all branches from Smart Invoice ...\"),\n                    callback: (r)=>{\n                        frm.reload_doc();\n                    }\n                });\n            }, __(\"Smart Invoice\"));\n            frm.page.get_inner_group_button(\"Smart Invoice\")\n                .find(\"button\")\n                .removeClass(\"btn-default\")\n                .addClass(\"btn-info\");\n        }\n    \n        // Custom filter function to exclude existing users\n        frm.set_query(\"user_id\", \"custom_branch_users\", function(doc) {\n            existing_users = frm.doc.custom_branch_users.map(row => row.user_id);\n            return{\n                filters: {\n                    \"name\": [\"not in\", existing_users]\n                }\n            };\n        });\n\t\t\n\t},\n\tafter_save(frm){\n\t    frappe.call({\n\t        method: \"smart_invoice_app.app.update_api_users\",\n\t        args: {\n\t            branch: frm.doc.branch\n\t        },\n    \t\tfreeze: true,\n    \t\tfreeze_message: __(\"Updating the branch and its users ...\"),\n\t        callback: (r)=>{\n                if(r.message){\n                    console.log(\"r\", r.message || r.message === \"\");\n    \t            frm.set_value(\"custom_previous_branch_users\", r.message);\n    \t            frm.refresh_fields(\"custom_previous_branch_users\");\n    \t            frm.save();\n    \t            frm.refresh();\n                }\n                else if(!r.message && frm.doc.custom_branch_users.length === 0){\n    \t            frm.set_value(\"custom_previous_branch_users\", \"\");\n                }\n                else{\n                    console.log('none');\n                }\n\t        }\n\t    });\n\t    \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item Group",
  "enabled": 1,
  "modified": "2024-09-30 12:04:37.084152",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Item Group",
  "script": "frappe.ui.form.on('Item Group', {\n\trefresh(frm) {\n        // Set up field filter for custom_branch_status\n        frm.set_query(\"custom_item_ty\", function() {\n            return {\n                filters: {\n                    \"cd_cls\": [\"in\", [\"Item Type\", \"24\"]]\n                }\n            };\n        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2024-12-13 19:15:39.263289",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Item",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t    \n\t    generate_item_code(frm);\n\t    \n        if (!frm.doc.__islocal){\n            frm.add_custom_button(__(\"Force Save\"), function() {\n                save_item_api(frm);\n            }, __(\"Smart Invoice\"));\n        \n            frm.page.get_inner_group_button(\"Smart Invoice\")\n                .find(\"button\")\n                .removeClass(\"btn-default\")\n                .addClass(\"btn-info\");\n        }\n        \n        create_codes_if_needed(frm);\n        \n        // Set up field filters\n        frm.set_query(\"custom_pkg_unit\", function() {\n            return {\n                filters: {\n                    \"custom_code_class_name\": [\"in\", [\"17\"]]\n                }\n            };\n        });\n        \n        frm.set_query(\"item_tax_template\", \"taxes\", function() {\n            if ([\"\"].includes(frm.doc.custom_industry_tax_type)) {\n                return {\n                    filters: {}\n                };\n            }\n            else if (frm.doc.custom_industry_tax_type == \"TOT\") {\n                return {\n                    filters: {\n                        \"custom_code\": [\"in\", [\"TOT\"]]\n                    }\n                };\n            }\n            else if (frm.doc.custom_industry_tax_type == \"VAT\") {\n                return {\n                    filters: {\n                        \"custom_code\": [\"in\", [\"A\", \"B\", \"RVAT\"]]\n                    }\n                };\n            }\n            else if (frm.doc.custom_industry_tax_type == \"Zero Rated (VAT)\") {\n                return {\n                    filters: {\n                        \"custom_code\": [\"in\", [\"C1\", \"C2\", \"C3\", \"E\", \"D\"]]\n                    }\n                };\n            }\n            else if (frm.doc.custom_industry_tax_type == \"Excise Duty\") {\n                return {\n                    filters: {\n                        \"custom_code\": [\"in\", [\"ECM\", \"EXEEG\"]]\n                    }\n                };\n            }\n            else if (frm.doc.custom_industry_tax_type == \"Tourism Levy\") {\n                return {\n                    filters: {\n                        \"custom_code\": [\"like\", \"TL%\"]\n                    }\n                };\n            }\n            else if (frm.doc.custom_industry_tax_type == \"Insurance Premium Levy\") {\n                return {\n                    filters: {\n                        \"custom_code\": [\"like\", \"IPL%\"]\n                    }\n                };\n            }\n        });\n        \n        frm.set_query(\"stock_uom\", function() {\n            return {\n                filters: {\n                    \"custom_code_class_name\": [\"in\", [\"10\"]]\n                }\n            };\n        });\n        frm.set_query(\"custom_excise_tax_category\", function() {\n            return {\n                filters: {\n                    \"cd_cls\": [\"in\", [\"60\"]]\n                }\n            };\n        });\n        frm.set_query(\"custom_insurance_premium_levy_category\", function() {\n            return {\n                filters: {\n                    \"cd_cls\": [\"in\", [\"61\"]]\n                }\n            };\n        });\n        frm.set_query(\"custom_tourism_levy_type\", function() {\n            return {\n                filters: {\n                    \"cd_cls\": [\"in\", [\"62\"]]\n                }\n            };\n        });\n\t},\n\tcustom_industry_tax_type(frm){\n        frm.clear_table(\"taxes\");\n        frm.refresh_field(\"taxes\");\n\t}\n});\n\nfunction create_codes_if_needed(frm){\n    frappe.call({\n        method: \"smart_invoice_app.app.create_codes_if_needed\",\n        args: {\n            item: frm.doc.name\n        },\n\t\tfreeze: true,\n\t\tfreeze_message: __(\"Updating Smart Invoice item codes ...\"),\n        callback: (r)=>{\n        }\n    });\n}\n\nfunction save_item_api(frm){\n    frappe.call({\n        method: \"smart_invoice_app.app.save_item_api\",\n        args: {\n            item: frm.doc.name\n        },\n\t\tfreeze: true,\n\t\tfreeze_message: __(\"Running Smart Invoice item sync ...\"),\n        callback: (r)=>{\n            frm.reload_doc();\n        }\n    });\n}\n\nfunction generate_item_code(frm){\n    if (!frm.doc.custom_generated_item_code){\n        frappe.call({\n            method: \"smart_invoice_app.app.generate_item_code\",\n            args: {\n                item: frm.doc,\n                initialize: false\n            },\n    \t\tfreeze: true,\n    \t\tfreeze_message: __(\"Generating Smart Invoice item code ...\"),\n            callback: (r)=>{\n                if(!r.error && r.message && r.message != frm.doc.custom_generated_item_code){\n                    frm.set_value(\"custom_generated_item_code\", r.message);\n                    frm.refresh_field(\"custom_generated_item_code\");\n                }\n            }\n        });\n    }\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-12-21 17:54:19.006323",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Customer",
  "script": "frappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t    frm.toggle_reqd('customer_primary_contact', frm.doc.mobile_no.length!==10);\n\t    \n\t    \n        // frm.add_custom_button(__(\"Sync with Smart Invoice\"), function() {\n        //     call_api(frm);\n        // });\n    \n        // Custom filter function to exclude already selected entries\n        frm.set_query(\"branch\", \"custom_customer_branches\", function(doc) {\n            selected = frm.doc.custom_customer_branches.map(row => row.branch);\n            return{\n                filters: {\n                    \"name\": [\"not in\", selected]\n                }\n            };\n        });\n\t\t\n\t},\n\tvalidate(frm){\n\t    if (frm.doc.mobile_no && frm.doc.mobile_no!==10){\n\t        frappe.throw(\"Update contact to 10 digits\");\n\t    }\n\t    if (frm.doc.mobile_no && frm.doc.mobile_no.length !== 10) {\n            // Throw an exception with the error message\n            frappe.throw(__(\"Mobile number should be 10 digits. Update it in Primary Contact <strong>\"+frm.doc.customer_primary_contact+\"</strong>\"));\n        }\n\t},\n\ttax_id(frm){\n\t\tconst tpin = frm.doc.tax_id;\n\t\t\n\t\tif (tpin && tpin.length !== 10) {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage:__(\"TPIN must be 10 digits\"),\n\t\t\t\tindicator:'red'\n\t\t\t}, 5);\n\t\t}\n\t},\n\tafter_save(frm){\n\t    call_api(frm);\n\t}\n});\n\nfunction call_api(frm){\n    frappe.call({\n        method: \"smart_invoice_app.app.sync_customer_api\",\n        // method: \"smart_invoice_app.app.get_user_branches\",\n        args: {\n            customer: frm.doc\n            // name: \"Headquarter\"\n        },\n\t\tfreeze: true,\n\t\tfreeze_message: __(\"Updating Smart Invoice customer data ...\"),\n        callback: (r)=>{\n            frm.reload_doc();\n        }\n    });\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "UOM",
  "enabled": 1,
  "modified": "2024-10-03 13:21:34.629522",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - UOM",
  "script": "frappe.ui.form.on('UOM', {\n\trefresh(frm) {\n        \n        // Set up field filter for custom_cd\n        frm.set_query(\"custom_cd\", function() {\n            return {\n                filters: {\n                    \"cd_cls\": [\"in\", [\"17\", \"10\"]]\n                }\n            };\n        });\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Company",
  "enabled": 1,
  "modified": "2024-10-04 07:59:57.552006",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Company",
  "script": "frappe.ui.form.on('Company', {\n\trefresh(frm) {\n\t    \n        // frm.add_custom_button(__(\"Sync with Smart Invoice\"), function() {\n        //     call_api(frm);\n        // });\n        \n        // Set up field filters\n        frm.set_query(\"custom_default_unit_of_measure\", function() {\n            return {\n                filters: [\n                    [\"custom_code_class_name\", \"=\", \"10\"],\n                    [\"custom_code_class_name\", \"!=\", undefined]\n                ]\n            };\n        });\n        \n        frm.set_query(\"custom_packaging_unit\", function() {\n            return {\n                filters: [\n                    [\"custom_code_class_name\", \"=\", \"17\"],\n                    [\"custom_code_class_name\", \"!=\", null]\n                ]\n            };\n        });\n\t},\n\tcustom_update_codes(frm){\n\t    create_codes_if_needed(frm);\n\t}\n\t\n});\n\n\nfunction create_codes_if_needed(frm){\n    frappe.call({\n        method: \"smart_invoice_app.app.create_codes_if_needed\",\n        args: {\n            item: frm.doc.name\n        },\n\t\tfreeze: true,\n\t\tfreeze_message: __(\"Updating Smart Invoice item codes ...\"),\n        callback: (r)=>{\n        }\n    });\n    \n}\n\nfunction call_api(frm){\n    frappe.call({\n        method: \"smart_invoice_app.app.save_item_api\",\n        args: {\n            item: frm.doc.name\n        },\n\t\tfreeze: true,\n\t\tfreeze_message: __(\"Updating Smart Invoice item data ...\"),\n        callback: (r)=>{\n            frm.reload_doc();\n        }\n    });\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-12-10 14:18:29.829224",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n        // Set up field filters\n        frm.set_query(\"custom_refund_reason\", function() {\n            return {\n                filters: {\n                    \"cd_cls\": [\"in\", [\"32\"]]\n                }\n            };\n        });\n        frm.set_query(\"custom_stock_adjustment_reason\", function() {\n            return {\n                filters: {\n                    \"cd_cls\": [\"in\", [\"35\"]]\n                }\n            };\n        });\n        // Reason for Debit note 67\n        // frm.set_query(\"custom_pkg_unit\", function() {\n        //     return {\n        //         filters: {\n        //             \"custom_code_class_name\": [\"in\", [\"17\"]]\n        //         }\n        //     };\n        // });\n        \n        // frm.set_query(\"tax_category\", \"taxes\", function() {\n        //     return {\n        //         filters: {\n        //             \"custom_cd\": [\"not in\", [\"TOT\"]]\n        //         }\n        //     };\n        // });\n\t},\n    validate(frm) {\n        // ensure taxes are inclusive in the item rate\n        frm.doc.taxes.forEach(tax => {\n            if (tax.included_in_print_rate === 0) {\n                tax.included_in_print_rate = 1;\n            }\n        });\n        \n        // update item taxes\n        // update_taxes(frm);\n        \n    },\n    on_submit(frm){\n        frm.reload_doc();\n    }\n    \n});\n\n// function update_taxes(frm){\n//     frappe.call({\n//         method: \"smart_invoice_app.app.set_item_taxes\",\n//         args: { \n//             invoice: frm.doc,\n//             invoice_items: frm.doc.items\n//         },\n// // \t\tfreeze: true,\n// // \t\tfreeze_message: __(\"Updating Item Taxes ...\"),\n//         callback: (r)=>{\n//             // frm.reload_doc();\n//         }\n//     });\n// }\n\n// function create_codes_if_needed(frm){\n//     frappe.call({\n//         method: \"smart_invoice_app.app.create_codes_if_needed\",\n//         args: {\n//             item: frm.doc.name\n//         },\n// \t\tfreeze: true,\n// \t\tfreeze_message: __(\"Updating Smart Invoice item codes ...\"),\n//         callback: (r)=>{\n//         }\n//     });\n    \n// }\n\n\n// function call_api(frm){\n//     frappe.call({\n//         method: \"smart_invoice_app.app.sync_items\",\n//         args: {\n//             initialize: true\n//         },\n// \t\tfreeze: true,\n// \t\tfreeze_message: __(\"Running Smart Invoice item sync ...\"),\n//         callback: (r)=>{\n//             frm.reload_doc();\n//         }\n//     });\n// }",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "BOM",
  "enabled": 1,
  "modified": "2024-12-13 19:12:46.217038",
  "module": "Smart Invoice App",
  "name": "Smart Invoice: BOM",
  "script": "frappe.ui.form.on('BOM', {\n\trefresh(frm) {\n        if (!frm.doc.__islocal){\n    \t\tfrm.add_custom_button(__(\"Force Sync\"), function() {\n                call_api(frm);\n            }, __(\"Smart Invoice\"));\n            \n            frm.page.get_inner_group_button(\"Smart Invoice\")\n                .find(\"button\")\n                .removeClass(\"btn-default\")\n                .addClass(\"btn-info\");\n\t    }\n\t}\n});\n\nfunction call_api(frm){\n    frappe.call({\n        method: \"smart_invoice_app.app.save_item_composition\",\n        args: {\n            bom: frm.doc.name\n        },\n\t\tfreeze: true,\n\t\tfreeze_message: __(\"Smart Invoice sync ...\"),\n        callback: (r)=>{\n            frm.reload_doc();\n        }\n    });\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2024-12-13 18:51:55.711763",
  "module": "Smart Invoice App",
  "name": "Smart Invoice - Item List",
  "script": "\n\nfrappe.listview_settings['Item'] = {\n    refresh: function(listview) {\n        listview.page.add_inner_button(__(\"Synchronize Items\"), function() {\n            frappe.call({\n                method: \"smart_invoice_app.app.sync_items\",\n                args: {\n                    initialize: true\n                },\n        \t\tfreeze: true,\n        \t\tfreeze_message: __(\"Running Smart Invoice item sync ...\"),\n                callback: (r)=>{\n                    // frm.reload_doc();\n                }\n            });\n             \n        }, __(\"Smart Invoice\"));\n        listview.page.get_inner_group_button(\"Smart Invoice\")\n                .find(\"button\")\n                .removeClass(\"btn-default\")\n                .addClass(\"btn-info\");\n    },\n};",
  "view": "List"
 }
]